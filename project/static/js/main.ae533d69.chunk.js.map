{"version":3,"sources":["components/Country.js","components/CityForm.js","components/City.js","api.js","App.js","serviceWorker.js","index.js"],"names":["Country","_this$props","this","props","country","index","click","active","react_default","a","createElement","className","onClick","title","text","Component","CityForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","titleChange","e","setState","target","value","descChange","desc","data","countryPk","keys","length","state","pk","country_pk","_this2","_this$props2","submit","cancel","_this$state","concat","placeholder","onChange","rows","City","auth","city","editCityPk","editButtonClick","del","CityForm_CityForm","getData","fetch","method","headers","Content-Type","credentials","then","response","json","getAuth","addCity","body","JSON","stringify","editCity","deleteCity","App","componentDidMount","activeCountry","countries","cities","countryClick","showAddForm","addButtonClick","addCancelClick","addSubmitClick","editCancelClick","editSubmitClick","deleteClick","window","confirm","filter","c","map","Country_Country","key","City_City","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae533d69.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Country extends Component {\r\n  render() {\r\n    const { country, index, click, active } = this.props;\r\n    return (\r\n      <div className={active ? 'country-container selected' : 'country-container'} onClick={() => click(index)}>\r\n        <div className='title'>{country.title}</div>\r\n        <div>{country.text}</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class CityForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const { data, countryPk } = this.props;\r\n    \r\n    if (Object.keys(data).length > 0) {\r\n      this.state = {\r\n        title: data.title,\r\n        desc: data.desc,\r\n        pk: data.pk,\r\n      }\r\n    } else {\r\n      this.state = {\r\n        title: '',\r\n        desc: '',\r\n        country_pk: countryPk,\r\n      }\r\n    }\r\n    \r\n  }\r\n\r\n  titleChange = e => {\r\n    this.setState({\r\n      title: e.target.value,\r\n    })\r\n  }\r\n\r\n  descChange = e => {\r\n    this.setState({\r\n      desc: e.target.value,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { data, submit, cancel } = this.props;\r\n    const { title, desc } = this.state;\r\n    return (\r\n      <div className='form-container'>\r\n        <div className='title'>\r\n          {Object.keys(data).length > 0 ? `Edit city ${data.title}` : 'Add City'}\r\n        </div>\r\n        <input\r\n          className='input-field'\r\n          placeholder='City name...'\r\n          onChange={this.titleChange}\r\n          value={title}\r\n        />\r\n        <textarea\r\n          rows=\"4\"\r\n          className='input-field'\r\n          placeholder='City description...'\r\n          onChange={this.descChange}\r\n          value={desc}\r\n        />\r\n        <div onClick={() => submit(this.state)} className='pull-left button primary pull-left'>Submit</div>\r\n        <div onClick={cancel} className='button pull-left'>Cancel</div>\r\n        <div className='clearfix' />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport CityForm from './CityForm';\r\n\r\nexport default class City extends Component {\r\n  render() {\r\n    const { auth, city, editCityPk, editButtonClick, cancel, submit, del } = this.props;\r\n    return (\r\n      <div>\r\n        {city.pk === editCityPk ? <CityForm data={city} submit={submit} cancel={cancel} /> : \r\n          (<div className='cities-item'>\r\n            {auth && <div className='actions-container'>\r\n                <span className='action-item' onClick={() => editButtonClick(city.pk)}>edit</span>\r\n                <span className='action-item' onClick={() => del(city)}>delete</span>\r\n              </div>\r\n            }\r\n            <div className='pull-left'>\r\n              <div className='cities-title'>{city.title}</div>\r\n              <div>{city.desc}</div>\r\n            </div>\r\n            <div className='clearfix' />\r\n          </div>)\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import 'whatwg-fetch';\r\n\r\nexport const getData = () => {\r\n  return fetch('/api/v1/', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'include',\r\n  }).then(response => response.json());\r\n}\r\n\r\nexport const getAuth = () => {\r\n  return fetch('/api/v1/auth/', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'include',\r\n  }).then(response => response.json());\r\n}\r\n\r\nexport const addCity = data => {\r\n  return fetch('/api/v1/', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'include',\r\n    body: JSON.stringify(data),\r\n  })\r\n}\r\n\r\nexport const editCity = data => {\r\n  return fetch('/api/v1/', {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'include',\r\n    body: JSON.stringify(data),\r\n  })\r\n}\r\n\r\nexport const deleteCity = data => {\r\n  return fetch('/api/v1/', {\r\n    method: 'DELETE',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    credentials: 'include',\r\n    body: JSON.stringify(data),\r\n  })\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport Country from './components/Country';\nimport City from './components/City';\nimport CityForm from './components/CityForm';\nimport {\n  getAuth,\n  getData,\n  addCity,\n  editCity,\n  deleteCity,\n} from './api';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: [],\n      activeCountry: 0,\n      countryPk: 0,\n      cities: [],\n      auth: false,\n      showAddForm: false,\n      editCityPk: 0,\n    }\n  }\n\n  componentDidMount = () => {\n    const { activeCountry } = this.state;\n    getData().then(countries => {\n      if (countries.length > 0) {\n        this.setState({\n          countries,\n          cities: countries[activeCountry].cities,\n          countryPk: countries[activeCountry].pk\n        });  \n      }\n    });\n    \n    getAuth().then(auth => {\n      this.setState({ auth })\n    });\n  }\n\n  countryClick = index => {\n    const { countries } = this.state;\n    this.setState({\n      activeCountry: index,\n      cities: countries[index].cities,\n      countryPk: countries[index].pk,\n      showAddForm: false,\n    })\n  }\n\n  addButtonClick = () => {\n    this.setState({\n      showAddForm: true,\n    });\n  }\n\n  addCancelClick = () => {\n    this.setState({\n      showAddForm: false,\n    })\n  }\n\n  addSubmitClick = (data) => {\n    if (data.title) {\n      addCity(data).then(() => {\n        getData().then(countries => {\n          this.setState({\n            showAddForm: false,\n            cities: countries[this.state.activeCountry].cities,\n            countries\n          })\n        })\n      });\n    }\n  }\n\n  editButtonClick = pk => {\n    this.setState({ editCityPk: pk });\n  }\n\n  editCancelClick = () => {\n    this.setState({ editCityPk: 0 })\n  }\n  \n  editSubmitClick = data => {\n    if (data.title) {\n      editCity(data).then(() => {\n        getData().then(countries => {\n          this.setState({\n            countries,\n            cities: countries[this.state.activeCountry].cities,\n            editCityPk: 0,\n          });\n        })\n      });\n    }\n  }\n\n  deleteClick = city => {\n    const { cities } = this.state;\n    if (window.confirm(`Delete information about the ${city.title}?`)) {\n      deleteCity(city).then(() => {\n        getData().then(countries => {\n          this.setState({\n            countries,\n            cities: cities.filter(c => c.pk !== city.pk),\n          });\n        })\n      });\n    }\n  }\n\n  render() {\n    const {\n      countries,\n      cities,\n      activeCountry,\n      auth,\n      showAddForm,\n      editCityPk,\n      countryPk,\n    } = this.state;\n    return (\n      <div>\n        <header className='header'>\n          <div className='container'>Countries of the World</div>\n        </header>\n        <main className='container'>\n          <div className='countries-column'>\n            <h4>Countries</h4>\n            {countries.length > 0 && countries.map((country, index) => (\n              <Country\n                key={'country'+index}\n                active={index === activeCountry}\n                country={country}\n                index={index}\n                click={this.countryClick}\n              />)\n            )}\n          </div>\n          <div className='cities-column'>\n            <h4>Cities</h4>\n            <div className='cities-container'>\n              {auth && (\n                <div className='form-item'>\n                  {showAddForm ? <CityForm countryPk={countryPk} data={{}} cancel={this.addCancelClick} submit={this.addSubmitClick} />\n                    : <div className='button primary' onClick={this.addButtonClick}>+ Add city</div> }                  \n                </div>\n              )}\n              {cities.length > 0 && cities.map((city, index) => (\n                <City\n                  key={'city'+index}\n                  city={city}\n                  editCityPk={editCityPk}\n                  editButtonClick={this.editButtonClick}\n                  cancel={this.editCancelClick}\n                  submit={this.editSubmitClick}\n                  del={this.deleteClick}\n                  auth={auth}\n                />))}\n            </div>\n          </div>\n        </main>\n        <footer className='footer'>\n          <div className='container'>Test task</div>\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}